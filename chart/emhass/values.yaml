# Default values for emhass.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: davidusb/emhass-docker-standalone
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.8.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "emhass"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000

timezone: Europe/Warsaw

customConfiguration:
  # If set to true create custom configuration from values.yaml file
  # If set to false uses default configuration from docker image ~/app/config_emhass.yaml
  # default value: false
  create: false
  config_emhass.yaml: |+
    # EMHASS Config Overrides
    # retrieve_hass_conf:
    #   freq: 30
    #   days_to_retrieve: 3
    #   ... 

# @param existingSecret Existing secret to use as secrets_emhass.yaml
# Must contain the key "secrets_emhass.yaml"
# If empty create secrets from values.yaml
existingSecrets: ""

secrets: 
  secrets_emhass.yaml: |+
    # EMHASS default secrets
    hass_url: https://myhass.duckdns.org/
    long_lived_token: thatverylongtokenhere
    time_zone: Europe/Paris
    lat: 45.83
    lon: 6.86
    alt: 4807.8
    solcast_api_key: yoursecretsolcastapikey
    solcast_rooftop_id: yourrooftopid
    solar_forecast_kwp: 5

persistence:
  enabled: false
#  storageClass: ""
#  existingClaim: ""
#  annotations: {}
  accessMode: ReadWriteOnce
  accessModes: []
  size: 5Gi
  # if you need any additional volumes, you can define them here
  additionalVolumes: []
  # if you need any additional volume mounts, you can define them here
  additionalMounts: []

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
